@startuml UML_sequence
hide footbox
actor Joueur
participant MainFrm
participant GameView
participant GameCanvas
participant EventLoop
participant GameCore
participant LevelBuilder
participant fstream
participant Level
participant GameScene
participant LevelBuilder as LB

Joueur ->> MainFrm: Démarrer le jeu
activate MainFrm
create GameView
MainFrm --> GameView: <<create>>
activate GameView
GameView -> GameView: init()
activate GameView
deactivate GameView
GameView -->> MainFrm: <<return>>
deactivate GameView

create GameCanvas
MainFrm -->> GameCanvas: <<create>>
activate GameCanvas
GameCanvas -> GameCanvas: initDetailedInfos()
activate GameCanvas
deactivate GameCanvas
[<<-- GameCanvas: <<event>> \n onInit()
GameCanvas -->> MainFrm: <<return>>
deactivate GameCanvas
deactivate MainFrm
[-->> GameCanvas: <<event>> \n onInit()
activate GameCanvas
create GameCore
GameCanvas --> GameCore: <<create>>
activate GameCore
deactivate GameCanvas

create LevelBuilder
GameCore --> LevelBuilder: <<create>>
activate LevelBuilder

LevelBuilder -> fstream : Lis le fichier de niveau
activate fstream
fstream --> LevelBuilder: <<return>> \n les lignes du fichier
deactivate fstream

loop for each line
	LevelBuilder --> LevelBuilder: <<create>> \n l'élément correspondant
	activate LevelBuilder
	LevelBuilder --> LevelBuilder: Ajoute l'élément à la liste
	deactivate LevelBuilder
end

LevelBuilder -->> GameCore: <<return>>
deactivate LevelBuilder

GameCore -> LevelBuilder: build()
activate LevelBuilder
create Level
LevelBuilder --> Level: <<create>>
activate Level
Level -> GameCanvas: createScene()
activate GameCanvas
create GameScene
GameCanvas --> GameScene: <<create>>
GameCanvas -->> Level: <<return>> \n GameScene
deactivate GameCanvas
Level -> GameCanvas: setCurrentScene(GameScene)
activate GameCanvas
GameCanvas -->> Level: <<return>>
deactivate GameCanvas
Level -->> LevelBuilder: <<return>>
deactivate Level

loop for each created sprite
	LevelBuilder -> GameScene: addSpriteToScene(sprite)
	activate GameScene
	GameScene -->> LevelBuilder: <<return>>
	deactivate GameScene
end


deactivate LevelBuilder
LevelBuilder -->> LevelBuilder: new QThread(LevelBuilder::discoverLevels)

activate LevelBuilder
loop for each sprite
	alt sprite is a door
		create LB
		LevelBuilder --> LB: <<create>>
		activate LB
		LB -> fstream: Lis le fichier de niveau
		activate fstream
		fstream -->> LB: <<return>>
		deactivate fstream

		loop for each line
			LB -> LB: <<create>> \n l'élément correspondant
			activate LB
			LB -->> LB: Ajoute l'élément à la liste
			deactivate LB
		end

		LB -->> LevelBuilder: <<return>>
		deactivate LB
		LevelBuilder -> Level: appendLevel(LevelBuilder)
		activate Level
		Level -->> LevelBuilder: <<return>>
		deactivate Level
	end
end
LevelBuilder -->> GameCore: <<return>> \n Level
deactivate LevelBuilder
GameCore --> LevelBuilder: ~LevelBuilder()
destroy LevelBuilder
GameCore -> GameCanvas: startTick()
activate GameCanvas
deactivate GameCore
deactivate GameCanvas

loop
[-->> GameCanvas: onTick()
activate GameCanvas
GameCanvas -> GameCore: tick()
activate GameCore
deactivate GameCore
GameCanvas -> GameScene: tick()
activate GameScene
deactivate GameScene
end
@enduml
